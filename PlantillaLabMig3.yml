AWSTemplateFormatVersion: '2010-09-09'
Description: 'Plantilla para laboratorio de migracion: VPC + RDS SQL Server Express + Redshift SG'

Parameters:
  DBPassword:
    Description: 'Contrase√±a para el usuario maestro de RDS'
    Type: String
    Default: '#LabDBase3!'
    NoEcho: true

Resources:

  LabVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: '10.0.0.0/16'
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: Lab-VPC

  LabIGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: Lab-IGW

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref LabVPC
      InternetGatewayId: !Ref LabIGW

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref LabVPC
      CidrBlock: '10.0.0.0/24'
      AvailabilityZone: 'us-east-1a'
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: Public-Subnet-1

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref LabVPC
      CidrBlock: '10.0.2.0/24'
      AvailabilityZone: 'us-east-1b'
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: Public-Subnet-2

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref LabVPC
      Tags:
        - Key: Name
          Value: Public-RouteTable

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref LabIGW

  Subnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable


  Subnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  LabDBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: 'Subnet group para RDS en subnets publicas'
      SubnetIds:
        - !Ref PublicSubnet2
        - !Ref PublicSubnet1
      Tags:
        - Key: Name
          Value: Lab-DBSubnetGroup

  RDSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: 'Security Group for RDS SQL Server'
      VpcId: !Ref LabVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 1433
          ToPort: 1433
          CidrIp: 0.0.0.0/0


  RedshiftSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: 'Enable Redshift Inbound Access TCP 5439'
      VpcId: !Ref LabVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5439
          ToPort: 5439
          CidrIp: '0.0.0.0/0'
      Tags:
        - Key: Name
          Value: Redshift-Access-SG


  LabRDSInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      Engine: sqlserver-ex
      DBInstanceClass: db.t3.micro
      AllocatedStorage: 20
      StorageType: gp2
      MasterUsername: admin
      MasterUserPassword: !Ref DBPassword
      VPCSecurityGroups:
        - !GetAtt RDSSecurityGroup.GroupId
      DBSubnetGroupName: !Ref LabDBSubnetGroup
      PubliclyAccessible: true
      MultiAZ: false
      BackupRetentionPeriod: 0
      Tags:
        - Key: Name
          Value: Lab-RDS-SQLServer

Outputs:
  VPCID:
    Description: 'ID de la VPC creada'
    Value: !Ref LabVPC
  RDSEndpoint:
    Description: 'Endpoint de conexion a RDS'
    Value: !GetAtt LabRDSInstance.Endpoint.Address
  RDSSecurityGroupID:
    Description: 'ID del Security Group de RDS'
    Value: !Ref RDSSecurityGroup
  RedshiftSecurityGroupID:
    Description: 'ID del Security Group para Redshift'
    Value: !Ref RedshiftSecurityGroup